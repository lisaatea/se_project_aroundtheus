!function(){"use strict";var e=class{constructor(e,t,s,i,r){this._name=e.name,this._link=e.link,this._id=e._id,this.isLiked=e.isLiked,this._handleDeleteClick=i,this._handleLikeClick=r,this._cardSelector=t,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeClick(this))),this._deleteButton.addEventListener("click",(()=>this._handleDeleteClick(this))),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}handleLikeButton(){this._likeButton.classList.toggle("card__like-button_active")}_setLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}removeCard(){this._element.remove(),this._element=null}getView(){return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._cardImage=this._element.querySelector(".card__image"),this._cardTitle=this._element.querySelector(".card__title"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._setLikes(),this._element}},t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class s{constructor(e,t){let{renderer:s,items:i}=e;this._renderer=s,this._items=i,this._container=document.querySelector(t)}renderItems(){this._items.reverse().forEach(this._renderer)}addItem(e){this._container.prepend(e)}}class i{constructor(e){this._popupElement=e,this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target===e.currentTarget||e.target.classList.contains("modal__close-button"))&&this.close()}))}}class r extends i{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._saveSubmit=this._popupElement.querySelector(".modal__save-button"),this._saveSubmitConfirmText=this._saveSubmit.textContent}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}saving=(()=>{var e=this;return function(t){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";e._saveSubmit.textContent=t?s:e._saveSubmitConfirmText}})();setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){this._popupForm.reset(),super.close()}}const n={inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>this._checkResponse(e)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>this._checkResponse(e)))}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((e=>this._checkResponse(e)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}updateUserInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.userName,about:e.userDescription})}).then((e=>this._checkResponse(e)))}setUserAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})}).then((e=>this._checkResponse(e)))}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"4f0e60af-a517-4551-bd96-a987f4d48fa8","Content-Type":"application/json"}}),a=document.querySelector("#profile-edit-button"),l=document.querySelector("#profile-edit-modal"),c=document.querySelector("#profile-title"),h=document.querySelector("#profile-title-input"),d=document.querySelector("#profile-description-input"),u=document.querySelector("#profile-description"),_=document.forms["profile-edit-form"],m=document.querySelector(".profile__add-button"),p=document.querySelector("#add-card-modal"),v=document.forms["add-card-form"],f=document.querySelector("#delete-card-modal"),E=document.querySelector("#image-preview"),b=document.querySelector("#avatar-edit-modal"),S=document.querySelector("#profile-image-button"),g=document.forms["avatar-edit-form"],k=document.querySelector(".profile__image"),y=new class{constructor(e,t,s){this._displayName=e,this._displayDescription=t,this._avatar=s}getUserInfo(){return{name:this._displayName.textContent,description:this._displayDescription.textContent.trim()}}setUserInfo(e,t){this._displayName.textContent=e,this._displayDescription.textContent=t}setAvatar(e){this._avatar.src=e}}(c,u,k);let L;o.getAppInfo().then((e=>{let[t,i]=e;L=new s({renderer:I,items:t},".cards__list"),L.renderItems(),y.setUserInfo(i.name,i.about),y.setAvatar(i.avatar)})).catch((e=>{console.error(e)})),a.addEventListener("click",(()=>{const e=y.getUserInfo();h.value=e.name,d.value=e.description,C.open()}));const C=new r(l,(e=>{C.saving(!0),o.updateUserInfo(e).then((e=>{y.setUserInfo(e.name,e.about),C.close(),A.toggleButtonState()})).catch((e=>{console.error(e)})).finally((()=>{C.saving(!1)}))}));C.setEventListeners(),m.addEventListener("click",(()=>{q.open()}));const I=t=>{const s=new e(t,"#card-template",B,T,w).getView();L.addItem(s)},q=new r(p,(e=>{q.saving(!0),o.addCard(e).then((e=>{I(e),q.close(),D.toggleButtonState()})).catch((e=>{console.error(e)})).finally((()=>{q.saving(!1)}))}));function B(e,t){U.open(e,t)}q.setEventListeners();const U=new class extends i{constructor(e){super(e),this._imageElement=this._popupElement.querySelector(".modal__image"),this._imageTitle=this._popupElement.querySelector(".modal__caption")}open(e,t){super.open(),this._imageElement.src=t,this._imageElement.alt=e,this._imageTitle.textContent=e}}(E,B);function w(e){e.isLiked?o.removeLike(e._id).then((()=>{e.handleLikeButton()})).catch((e=>{console.error(e)})):o.likeCard(e._id).then((()=>{e.handleLikeButton()})).catch((e=>{console.error(e)}))}U.setEventListeners();const x=new class extends i{constructor(e){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._deleteSubmit=this._popupElement.querySelector(".modal__save-button"),this._deleteSubmitConfirmText=this._deleteSubmit.textContent}setSubmitAction(e){this._handleFormSubmit=e}deleting=(()=>{var e=this;return function(t){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Deleting...";e._deleteSubmit.textContent=t?s:e._deleteSubmitConfirmText}})();setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}(f);function T(e){x.open(),x.setSubmitAction((()=>{x.deleting(!0),o.deleteCard(e._id).then((()=>{e.removeCard(),x.close()})).catch((e=>{console.error(e)})).finally((()=>{x.deleting(!1)}))}))}x.setEventListeners(),S.addEventListener("click",(()=>{$.open()}));const $=new r(b,(e=>{$.saving(!0),o.setUserAvatar(e).then((e=>{y.setAvatar(e.avatar),$.close(),V.toggleButtonState()})).catch((e=>{console.error(e)})).finally((()=>{$.saving(!1)}))}));$.setEventListeners();const A=new t(n,_),D=new t(n,v),V=new t(n,g);A.enableValidation(),D.enableValidation(),V.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBbUIsSUFBSWEsRUFBYzNGLEVBQW9COEMsR0FFekQ0QyxFQUFzQixJQUFJQyxFQUM5QjNGLEVBQ0FtRCxHQUdGcUIsRUFBa0J2SCxtQkFDbEI2SCxFQUFpQjdILG1CQUNqQnlJLEVBQW9Cekksa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIENhcmQge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgZGF0YSxcclxuICAgIGNhcmRTZWxlY3RvcixcclxuICAgIGhhbmRsZUltYWdlQ2xpY2ssXHJcbiAgICBoYW5kbGVEZWxldGVDbGljayxcclxuICAgIGhhbmRsZUxpa2VDbGlja1xyXG4gICkge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcclxuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XHJcbiAgICB0aGlzLl9pZCA9IGRhdGEuX2lkO1xyXG4gICAgdGhpcy5pc0xpa2VkID0gZGF0YS5pc0xpa2VkO1xyXG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sgPSBoYW5kbGVEZWxldGVDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayA9IGhhbmRsZUxpa2VDbGljaztcclxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xyXG4gIH1cclxuXHJcbiAgX2dldFRlbXBsYXRlKCkge1xyXG4gICAgcmV0dXJuIGRvY3VtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcclxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxyXG4gICAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sodGhpcylcclxuICAgICk7XHJcblxyXG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxyXG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayh0aGlzKVxyXG4gICAgKTtcclxuXHJcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlSW1hZ2VDbGljayh0aGlzLl9uYW1lLCB0aGlzLl9saW5rKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlTGlrZUJ1dHRvbigpIHtcclxuICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnRvZ2dsZShcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcclxuICB9XHJcblxyXG4gIF9zZXRMaWtlcygpIHtcclxuICAgIGlmICh0aGlzLmlzTGlrZWQpIHtcclxuICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmVtb3ZlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcclxuICB9XHJcblxyXG4gIGdldFZpZXcoKSB7XHJcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcclxuXHJcbiAgICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2RlbGV0ZS1idXR0b25cIik7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XHJcbiAgICB0aGlzLl9jYXJkVGl0bGUgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdGl0bGVcIik7XHJcblxyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xyXG4gICAgdGhpcy5fY2FyZFRpdGxlLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuXHJcbiAgICB0aGlzLl9zZXRMaWtlcygpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FyZDtcclxuIiwiY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbGVtZW50KSB7XHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gc2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IHNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xyXG4gICAgdGhpcy5fZm9ybSA9IGZvcm1FbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpIHtcclxuICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsLmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IGlucHV0RWwudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICBlcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX2hpZGVJbnB1dEVycm9yKGlucHV0RWwpIHtcclxuICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsLmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICBlcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBfaGFzSW52YWxpZElucHV0KCkge1xyXG4gICAgcmV0dXJuICF0aGlzLl9pbnB1dEVscy5ldmVyeSgoaW5wdXRFbCkgPT4gaW5wdXRFbC52YWxpZGl0eS52YWxpZCk7XHJcbiAgfVxyXG5cclxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpIHtcclxuICAgIGlmICghaW5wdXRFbC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICByZXR1cm4gdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKTtcclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2lucHV0RWxzID0gWy4uLnRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKV07XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xyXG4gICAgICBpbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZSkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKTtcclxuICAgICAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEZvcm1WYWxpZGF0b3I7XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgcmVuZGVyZXIsIGl0ZW1zIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICB0aGlzLl9pdGVtcy5yZXZlcnNlKCkuZm9yRWFjaCh0aGlzLl9yZW5kZXJlcik7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGl0ZW0pIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGl0ZW0pO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gcG9wdXBTZWxlY3RvcjtcclxuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKTtcclxuICB9XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm1vZGFsX29wZW5lZFwiKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlRXNjQ2xvc2UoZSkge1xyXG4gICAgaWYgKGUua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgICBpZiAoZS50YXJnZXQgPT09IGUuY3VycmVudFRhcmdldCkge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfSBlbHNlIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbF9fY2xvc2UtYnV0dG9uXCIpKSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICAgIHRoaXMuX2lucHV0TGlzdCA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsX19pbnB1dFwiKTtcclxuICAgIHRoaXMuX3NhdmVTdWJtaXQgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fc2F2ZS1idXR0b25cIik7XHJcbiAgICB0aGlzLl9zYXZlU3VibWl0Q29uZmlybVRleHQgPSB0aGlzLl9zYXZlU3VibWl0LnRleHRDb250ZW50O1xyXG4gIH1cclxuXHJcbiAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBpbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XHJcbiAgfVxyXG5cclxuICBzYXZpbmcgPSAoc2F2aW5nLCBzYXZpbmdUZXh0ID0gXCJTYXZpbmcuLi5cIikgPT4ge1xyXG4gICAgaWYgKHNhdmluZykge1xyXG4gICAgICB0aGlzLl9zYXZlU3VibWl0LnRleHRDb250ZW50ID0gc2F2aW5nVGV4dDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3NhdmVTdWJtaXQudGV4dENvbnRlbnQgPSB0aGlzLl9zYXZlU3VibWl0Q29uZmlybVRleHQ7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGNvbnN0IHNlbGVjdG9ycyA9IHtcclxuICBjYXJkU2VjdGlvbjogXCIuY2FyZHNfX2xpc3RcIixcclxuICBjYXJkVGVtcGxhdGU6IFwiI2NhcmQtdGVtcGxhdGVcIixcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCB2YWxpZGF0aW9uU2V0dGluZ3MgPSB7XHJcbiAgaW5wdXRTZWxlY3RvcjogXCIubW9kYWxfX2lucHV0XCIsXHJcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19zYXZlLWJ1dHRvblwiLFxyXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG4gIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXRfdHlwZV9lcnJvclwiLFxyXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIixcclxufTtcclxuIiwiaW1wb3J0IFwiLi4vcGFnZXMvaW5kZXguY3NzXCI7XHJcblxyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IHsgc2VsZWN0b3JzLCB2YWxpZGF0aW9uU2V0dGluZ3MgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XHJcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhDb25maXJtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm0uanNcIjtcclxuXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xyXG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjFcIixcclxuICBoZWFkZXJzOiB7XHJcbiAgICBhdXRob3JpemF0aW9uOiBcIjRmMGU2MGFmLWE1MTctNDU1MS1iZDk2LWE5ODdmNGQ0OGZhOFwiLFxyXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgfSxcclxufSk7XHJcblxyXG5jb25zdCBwcm9maWxlRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LWJ1dHRvblwiKTtcclxuY29uc3QgcHJvZmlsZUVkaXRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LW1vZGFsXCIpO1xyXG5jb25zdCBwcm9maWxlVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtdGl0bGVcIik7XHJcbmNvbnN0IHByb2ZpbGVUaXRsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLXRpdGxlLWlucHV0XCIpO1xyXG5jb25zdCBwcm9maWxlRGVzY3JpcHRpb25JbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIjcHJvZmlsZS1kZXNjcmlwdGlvbi1pbnB1dFwiXHJcbik7XHJcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1kZXNjcmlwdGlvblwiKTtcclxuY29uc3QgcHJvZmlsZUVkaXRGb3JtID0gZG9jdW1lbnQuZm9ybXNbXCJwcm9maWxlLWVkaXQtZm9ybVwiXTtcclxuY29uc3QgYWRkTmV3Q2FyZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTtcclxuY29uc3QgYWRkQ2FyZE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZC1tb2RhbFwiKTtcclxuY29uc3QgYWRkQ2FyZEZvcm0gPSBkb2N1bWVudC5mb3Jtc1tcImFkZC1jYXJkLWZvcm1cIl07XHJcbmNvbnN0IGRlbGV0ZUNhcmRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGVsZXRlLWNhcmQtbW9kYWxcIik7XHJcbmNvbnN0IGltYWdlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2ltYWdlLXByZXZpZXdcIik7XHJcbmNvbnN0IGF2YXRhckVkaXRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYXZhdGFyLWVkaXQtbW9kYWxcIik7XHJcbmNvbnN0IGF2YXRhckVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtaW1hZ2UtYnV0dG9uXCIpO1xyXG5jb25zdCBhdmF0YXJFZGl0Rm9ybSA9IGRvY3VtZW50LmZvcm1zW1wiYXZhdGFyLWVkaXQtZm9ybVwiXTtcclxuY29uc3QgYXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19pbWFnZVwiKTtcclxuXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHByb2ZpbGVUaXRsZSwgcHJvZmlsZURlc2NyaXB0aW9uLCBhdmF0YXIpO1xyXG5sZXQgY2FyZFNlY3Rpb247XHJcblxyXG5hcGlcclxuICAuZ2V0QXBwSW5mbygpXHJcbiAgLnRoZW4oKFtjYXJkcywgdXNlcl0pID0+IHtcclxuICAgIGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAgICAgIHtcclxuICAgICAgICByZW5kZXJlcjogcmVuZGVyQ2FyZCxcclxuICAgICAgICBpdGVtczogY2FyZHMsXHJcbiAgICAgIH0sXHJcbiAgICAgIHNlbGVjdG9ycy5jYXJkU2VjdGlvblxyXG4gICAgKTtcclxuICAgIGNhcmRTZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyh1c2VyLm5hbWUsIHVzZXIuYWJvdXQpO1xyXG4gICAgdXNlckluZm8uc2V0QXZhdGFyKHVzZXIuYXZhdGFyKTtcclxuICB9KVxyXG4gIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgfSk7XHJcblxyXG5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGNvbnN0IHVzZXJEYXRhID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcclxuICBwcm9maWxlVGl0bGVJbnB1dC52YWx1ZSA9IHVzZXJEYXRhLm5hbWU7XHJcbiAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSB1c2VyRGF0YS5kZXNjcmlwdGlvbjtcclxuICBlZGl0UHJvZmlsZVBvcHVwLm9wZW4oKTtcclxufSk7XHJcblxyXG5jb25zdCBlZGl0UHJvZmlsZVBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0ocHJvZmlsZUVkaXRNb2RhbCwgKGRhdGEpID0+IHtcclxuICBlZGl0UHJvZmlsZVBvcHVwLnNhdmluZyh0cnVlKTtcclxuICBhcGlcclxuICAgIC51cGRhdGVVc2VySW5mbyhkYXRhKVxyXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgdXNlckluZm8uc2V0VXNlckluZm8oZGF0YS5uYW1lLCBkYXRhLmFib3V0KTtcclxuICAgICAgZWRpdFByb2ZpbGVQb3B1cC5jbG9zZSgpO1xyXG4gICAgICBlZGl0Rm9ybVZhbGlkYXRvci50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIGVkaXRQcm9maWxlUG9wdXAuc2F2aW5nKGZhbHNlKTtcclxuICAgIH0pO1xyXG59KTtcclxuXHJcbmVkaXRQcm9maWxlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmFkZE5ld0NhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBhZGRDYXJkUG9wdXAub3BlbigpO1xyXG59KTtcclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoaXRlbSkge1xyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcclxuICAgIGl0ZW0sXHJcbiAgICBzZWxlY3RvcnMuY2FyZFRlbXBsYXRlLFxyXG4gICAgaGFuZGxlSW1hZ2VDbGljayxcclxuICAgIGhhbmRsZURlbGV0ZUNsaWNrLFxyXG4gICAgaGFuZGxlTGlrZUNsaWNrXHJcbiAgKTtcclxuICByZXR1cm4gY2FyZC5nZXRWaWV3KCk7XHJcbn1cclxuY29uc3QgcmVuZGVyQ2FyZCA9IChjYXJkRGF0YSkgPT4ge1xyXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gY3JlYXRlQ2FyZChjYXJkRGF0YSk7XHJcbiAgY2FyZFNlY3Rpb24uYWRkSXRlbShjYXJkRWxlbWVudCk7XHJcbn07XHJcblxyXG5jb25zdCBhZGRDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShhZGRDYXJkTW9kYWwsIChkYXRhKSA9PiB7XHJcbiAgYWRkQ2FyZFBvcHVwLnNhdmluZyh0cnVlKTtcclxuICBhcGlcclxuICAgIC5hZGRDYXJkKGRhdGEpXHJcbiAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICByZW5kZXJDYXJkKGRhdGEpO1xyXG4gICAgICBhZGRDYXJkUG9wdXAuY2xvc2UoKTtcclxuICAgICAgYWRkRm9ybVZhbGlkYXRvci50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIGFkZENhcmRQb3B1cC5zYXZpbmcoZmFsc2UpO1xyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuYWRkQ2FyZFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVJbWFnZUNsaWNrKG5hbWUsIGxpbmspIHtcclxuICBwcmV2aWV3SW1hZ2VQb3B1cC5vcGVuKG5hbWUsIGxpbmspO1xyXG59XHJcblxyXG5jb25zdCBwcmV2aWV3SW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShpbWFnZU1vZGFsLCBoYW5kbGVJbWFnZUNsaWNrKTtcclxucHJldmlld0ltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUxpa2VDbGljayhjYXJkKSB7XHJcbiAgaWYgKGNhcmQuaXNMaWtlZCkge1xyXG4gICAgYXBpXHJcbiAgICAgIC5yZW1vdmVMaWtlKGNhcmQuX2lkKVxyXG4gICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgY2FyZC5oYW5kbGVMaWtlQnV0dG9uKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgICB9KTtcclxuICB9IGVsc2Uge1xyXG4gICAgYXBpXHJcbiAgICAgIC5saWtlQ2FyZChjYXJkLl9pZClcclxuICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgIGNhcmQuaGFuZGxlTGlrZUJ1dHRvbigpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5jb25zdCBkZWxldGVDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoQ29uZmlybShkZWxldGVDYXJkTW9kYWwpO1xyXG5kZWxldGVDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmZ1bmN0aW9uIGhhbmRsZURlbGV0ZUNsaWNrKGNhcmQpIHtcclxuICBkZWxldGVDYXJkUG9wdXAub3BlbigpO1xyXG4gIGRlbGV0ZUNhcmRQb3B1cC5zZXRTdWJtaXRBY3Rpb24oKCkgPT4ge1xyXG4gICAgZGVsZXRlQ2FyZFBvcHVwLmRlbGV0aW5nKHRydWUpO1xyXG4gICAgYXBpXHJcbiAgICAgIC5kZWxldGVDYXJkKGNhcmQuX2lkKVxyXG4gICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgY2FyZC5yZW1vdmVDYXJkKCk7XHJcbiAgICAgICAgZGVsZXRlQ2FyZFBvcHVwLmNsb3NlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgICB9KVxyXG4gICAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgZGVsZXRlQ2FyZFBvcHVwLmRlbGV0aW5nKGZhbHNlKTtcclxuICAgICAgfSk7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmF2YXRhckVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBlZGl0QXZhdGFyUG9wdXAub3BlbigpO1xyXG59KTtcclxuXHJcbmNvbnN0IGVkaXRBdmF0YXJQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKGF2YXRhckVkaXRNb2RhbCwgKGRhdGEpID0+IHtcclxuICBlZGl0QXZhdGFyUG9wdXAuc2F2aW5nKHRydWUpO1xyXG4gIGFwaVxyXG4gICAgLnNldFVzZXJBdmF0YXIoZGF0YSlcclxuICAgIC50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgIHVzZXJJbmZvLnNldEF2YXRhcihkYXRhLmF2YXRhcik7XHJcbiAgICAgIGVkaXRBdmF0YXJQb3B1cC5jbG9zZSgpO1xyXG4gICAgICBhdmF0YXJGb3JtVmFsaWRhdG9yLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgfSlcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgZWRpdEF2YXRhclBvcHVwLnNhdmluZyhmYWxzZSk7XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG5lZGl0QXZhdGFyUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IGVkaXRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoXHJcbiAgdmFsaWRhdGlvblNldHRpbmdzLFxyXG4gIHByb2ZpbGVFZGl0Rm9ybVxyXG4pO1xyXG5jb25zdCBhZGRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvblNldHRpbmdzLCBhZGRDYXJkRm9ybSk7XHJcblxyXG5jb25zdCBhdmF0YXJGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoXHJcbiAgdmFsaWRhdGlvblNldHRpbmdzLFxyXG4gIGF2YXRhckVkaXRGb3JtXHJcbik7XHJcblxyXG5lZGl0Rm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmFkZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5hdmF0YXJGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGhlYWRlcnMgfSkge1xyXG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XHJcbiAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVycztcclxuICB9XHJcblxyXG4gIF9jaGVja1Jlc3BvbnNlKHJlcykge1xyXG4gICAgaWYgKHJlcy5vaykge1xyXG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcclxuICAgIH1cclxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcclxuICB9XHJcblxyXG4gIGdldEluaXRpYWxDYXJkcygpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tSZXNwb25zZShyZXMpKTtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSkudGhlbigocmVzKSA9PiB0aGlzLl9jaGVja1Jlc3BvbnNlKHJlcykpO1xyXG4gIH1cclxuXHJcbiAgYWRkQ2FyZChjYXJkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBjYXJkLm5hbWUsXHJcbiAgICAgICAgbGluazogY2FyZC5saW5rLFxyXG4gICAgICB9KSxcclxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tSZXNwb25zZShyZXMpKTtcclxuICB9XHJcblxyXG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9YCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKChyZXMpID0+IHRoaXMuX2NoZWNrUmVzcG9uc2UocmVzKSk7XHJcbiAgfVxyXG5cclxuICBsaWtlQ2FyZChjYXJkSWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH0vbGlrZXNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tSZXNwb25zZShyZXMpKTtcclxuICB9XHJcblxyXG4gIHJlbW92ZUxpa2UoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KS50aGVuKChyZXMpID0+IHRoaXMuX2NoZWNrUmVzcG9uc2UocmVzKSk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVVc2VySW5mbyhkYXRhKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogZGF0YS51c2VyTmFtZSxcclxuICAgICAgICBhYm91dDogZGF0YS51c2VyRGVzY3JpcHRpb24sXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbigocmVzKSA9PiB0aGlzLl9jaGVja1Jlc3BvbnNlKHJlcykpO1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckF2YXRhcihkYXRhKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGF2YXRhcjogZGF0YS5saW5rLFxyXG4gICAgICB9KSxcclxuICAgIH0pLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tSZXNwb25zZShyZXMpKTtcclxuICB9XHJcblxyXG4gIGdldEFwcEluZm8oKSB7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3RoaXMuZ2V0SW5pdGlhbENhcmRzKCksIHRoaXMuZ2V0VXNlckluZm8oKV0pO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgY29uc3RydWN0b3IobmFtZUVsZW1lbnQsIGpvYkVsZW1lbnQsIGF2YXRhcikge1xyXG4gICAgdGhpcy5fZGlzcGxheU5hbWUgPSBuYW1lRWxlbWVudDtcclxuICAgIHRoaXMuX2Rpc3BsYXlEZXNjcmlwdGlvbiA9IGpvYkVsZW1lbnQ7XHJcbiAgICB0aGlzLl9hdmF0YXIgPSBhdmF0YXI7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5hbWU6IHRoaXMuX2Rpc3BsYXlOYW1lLnRleHRDb250ZW50LFxyXG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5fZGlzcGxheURlc2NyaXB0aW9uLnRleHRDb250ZW50LnRyaW0oKSxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySW5mbyh1c2VyTmFtZSwgdXNlckRlc2NyaXB0aW9uKSB7XHJcbiAgICB0aGlzLl9kaXNwbGF5TmFtZS50ZXh0Q29udGVudCA9IHVzZXJOYW1lO1xyXG4gICAgdGhpcy5fZGlzcGxheURlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gdXNlckRlc2NyaXB0aW9uO1xyXG4gIH1cclxuXHJcbiAgc2V0QXZhdGFyKGxpbmspIHtcclxuICAgIHRoaXMuX2F2YXRhci5zcmMgPSBsaW5rO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5faW1hZ2VFbGVtZW50ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlXCIpO1xyXG4gICAgdGhpcy5faW1hZ2VUaXRsZSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jYXB0aW9uXCIpO1xyXG4gIH1cclxuXHJcbiAgb3BlbihuYW1lLCBsaW5rKSB7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgICB0aGlzLl9pbWFnZUVsZW1lbnQuc3JjID0gbGluaztcclxuICAgIHRoaXMuX2ltYWdlRWxlbWVudC5hbHQgPSBuYW1lO1xyXG4gICAgdGhpcy5faW1hZ2VUaXRsZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG4gICAgdGhpcy5fZGVsZXRlU3VibWl0ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIFwiLm1vZGFsX19zYXZlLWJ1dHRvblwiXHJcbiAgICApO1xyXG4gICAgdGhpcy5fZGVsZXRlU3VibWl0Q29uZmlybVRleHQgPSB0aGlzLl9kZWxldGVTdWJtaXQudGV4dENvbnRlbnQ7XHJcbiAgfVxyXG5cclxuICBzZXRTdWJtaXRBY3Rpb24oYWN0aW9uKSB7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gYWN0aW9uO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRpbmcgPSAoZGVsZXRpbmcsIGRlbGV0aW5nVGV4dCA9IFwiRGVsZXRpbmcuLi5cIikgPT4ge1xyXG4gICAgaWYgKGRlbGV0aW5nKSB7XHJcbiAgICAgIHRoaXMuX2RlbGV0ZVN1Ym1pdC50ZXh0Q29udGVudCA9IGRlbGV0aW5nVGV4dDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2RlbGV0ZVN1Ym1pdC50ZXh0Q29udGVudCA9IHRoaXMuX2RlbGV0ZVN1Ym1pdENvbmZpcm1UZXh0O1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX3BvcHVwRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJjb25zdHJ1Y3RvciIsImRhdGEiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVJbWFnZUNsaWNrIiwiaGFuZGxlRGVsZXRlQ2xpY2siLCJoYW5kbGVMaWtlQ2xpY2siLCJ0aGlzIiwiX25hbWUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2lkIiwiaXNMaWtlZCIsIl9oYW5kbGVEZWxldGVDbGljayIsIl9oYW5kbGVMaWtlQ2xpY2siLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJfZ2V0VGVtcGxhdGUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX2xpa2VCdXR0b24iLCJhZGRFdmVudExpc3RlbmVyIiwiX2RlbGV0ZUJ1dHRvbiIsIl9jYXJkSW1hZ2UiLCJoYW5kbGVMaWtlQnV0dG9uIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiX3NldExpa2VzIiwiYWRkIiwicmVtb3ZlIiwicmVtb3ZlQ2FyZCIsIl9lbGVtZW50IiwiZ2V0VmlldyIsIl9jYXJkVGl0bGUiLCJzcmMiLCJhbHQiLCJ0ZXh0Q29udGVudCIsInNldHRpbmdzIiwiZm9ybUVsZW1lbnQiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybSIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0RWwiLCJlcnJvck1lc3NhZ2VFbCIsImlkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfaGlkZUlucHV0RXJyb3IiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJfc3VibWl0QnV0dG9uIiwiZGlzYWJsZWQiLCJfaW5wdXRFbHMiLCJldmVyeSIsInZhbGlkaXR5IiwidmFsaWQiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJlIiwiZW5hYmxlVmFsaWRhdGlvbiIsInByZXZlbnREZWZhdWx0IiwiU2VjdGlvbiIsIl9yZWYiLCJjb250YWluZXJTZWxlY3RvciIsInJlbmRlcmVyIiwiaXRlbXMiLCJfcmVuZGVyZXIiLCJfaXRlbXMiLCJfY29udGFpbmVyIiwicmVuZGVySXRlbXMiLCJyZXZlcnNlIiwiYWRkSXRlbSIsIml0ZW0iLCJwcmVwZW5kIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwRWxlbWVudCIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJvcGVuIiwiY2xvc2UiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwia2V5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsInN1cGVyIiwiX3BvcHVwRm9ybSIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX2lucHV0TGlzdCIsIl9zYXZlU3VibWl0IiwiX3NhdmVTdWJtaXRDb25maXJtVGV4dCIsIl9nZXRJbnB1dFZhbHVlcyIsImlucHV0VmFsdWVzIiwiaW5wdXQiLCJ2YWx1ZSIsInNhdmluZyIsIl90aGlzIiwic2F2aW5nVGV4dCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInJlc2V0IiwidmFsaWRhdGlvblNldHRpbmdzIiwiYXBpIiwiYmFzZVVybCIsImhlYWRlcnMiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwiX2NoZWNrUmVzcG9uc2UiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiZ2V0SW5pdGlhbENhcmRzIiwiZmV0Y2giLCJ0aGVuIiwiZ2V0VXNlckluZm8iLCJhZGRDYXJkIiwiY2FyZCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZGVsZXRlQ2FyZCIsImNhcmRJZCIsImxpa2VDYXJkIiwicmVtb3ZlTGlrZSIsInVwZGF0ZVVzZXJJbmZvIiwidXNlck5hbWUiLCJhYm91dCIsInVzZXJEZXNjcmlwdGlvbiIsInNldFVzZXJBdmF0YXIiLCJhdmF0YXIiLCJnZXRBcHBJbmZvIiwiYWxsIiwiYXV0aG9yaXphdGlvbiIsInByb2ZpbGVFZGl0QnV0dG9uIiwicHJvZmlsZUVkaXRNb2RhbCIsInByb2ZpbGVUaXRsZSIsInByb2ZpbGVUaXRsZUlucHV0IiwicHJvZmlsZURlc2NyaXB0aW9uSW5wdXQiLCJwcm9maWxlRGVzY3JpcHRpb24iLCJwcm9maWxlRWRpdEZvcm0iLCJmb3JtcyIsImFkZE5ld0NhcmRCdXR0b24iLCJhZGRDYXJkTW9kYWwiLCJhZGRDYXJkRm9ybSIsImRlbGV0ZUNhcmRNb2RhbCIsImltYWdlTW9kYWwiLCJhdmF0YXJFZGl0TW9kYWwiLCJhdmF0YXJFZGl0QnV0dG9uIiwiYXZhdGFyRWRpdEZvcm0iLCJ1c2VySW5mbyIsIm5hbWVFbGVtZW50Iiwiam9iRWxlbWVudCIsIl9kaXNwbGF5TmFtZSIsIl9kaXNwbGF5RGVzY3JpcHRpb24iLCJfYXZhdGFyIiwiZGVzY3JpcHRpb24iLCJ0cmltIiwic2V0VXNlckluZm8iLCJzZXRBdmF0YXIiLCJjYXJkU2VjdGlvbiIsImNhcmRzIiwidXNlciIsInJlbmRlckNhcmQiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsInVzZXJEYXRhIiwiZWRpdFByb2ZpbGVQb3B1cCIsImVkaXRGb3JtVmFsaWRhdG9yIiwiZmluYWxseSIsImFkZENhcmRQb3B1cCIsImNhcmREYXRhIiwiY2FyZEVsZW1lbnQiLCJDYXJkIiwiYWRkRm9ybVZhbGlkYXRvciIsInByZXZpZXdJbWFnZVBvcHVwIiwiX2ltYWdlRWxlbWVudCIsIl9pbWFnZVRpdGxlIiwiZGVsZXRlQ2FyZFBvcHVwIiwiX2RlbGV0ZVN1Ym1pdCIsIl9kZWxldGVTdWJtaXRDb25maXJtVGV4dCIsInNldFN1Ym1pdEFjdGlvbiIsImFjdGlvbiIsImRlbGV0aW5nIiwiZGVsZXRpbmdUZXh0IiwiZWRpdEF2YXRhclBvcHVwIiwiYXZhdGFyRm9ybVZhbGlkYXRvciIsIkZvcm1WYWxpZGF0b3IiXSwic291cmNlUm9vdCI6IiJ9