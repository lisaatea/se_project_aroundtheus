!function(){"use strict";var e=class{constructor(e,t,s,i,r){this._name=e.name,this._link=e.link,this._id=e._id,this.isLiked=e.isLiked,this._handleDeleteClick=i,this._handleLikeClick=r,this._cardSelector=t,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._element.querySelector(".card__like-button").addEventListener("click",(()=>this._handleLikeClick(this))),this._element.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleDeleteClick(this))),this._element.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}handleLikeButton(){this._element.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_setLikes(){this.isLiked?this._element.querySelector(".card__like-button").classList.add("card__like-button_active"):this._element.querySelector(".card__like-button").classList.remove("card__like-button_active")}removeCard(){this._element.remove(),this._element=null}getView(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".card__image").src=this._link,this._element.querySelector(".card__image").alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this._setLikes(),this._element}},t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}toggleButtonState(){if(this._hasInvalidInput())return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class s{constructor(e,t){let{renderer:s,items:i}=e;this._renderer=s,this._items=i,this._container=document.querySelector(t)}renderItems(){this._items.reverse().forEach(this._renderer)}addItem(e){this._container.prepend(e)}}class i{constructor(e){this._popupElement=e,this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target===e.currentTarget||e.target.classList.contains("modal__close-button"))&&this.close()}))}}class r extends i{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._popupElement.querySelectorAll(".modal__input"),this._saveSubmit=this._popupElement.querySelector(".modal__save-button"),this._saveSubmitConfirmText=this._saveSubmit.textContent}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}saving=(()=>{var e=this;return function(t){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";e._saveSubmit.textContent=t?s:e._saveSubmitConfirmText}})();setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){this._popupForm.reset(),super.close()}}const n={inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`).catch((e=>{console.error(e)}))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>this._checkResponse(e)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>this._checkResponse(e)))}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((e=>this._checkResponse(e)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}updateUserInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.userName,about:e.userDescription})}).then((e=>this._checkResponse(e)))}setUserAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.link})}).then((e=>this._checkResponse(e)))}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"4f0e60af-a517-4551-bd96-a987f4d48fa8","Content-Type":"application/json"}}),a=document.querySelector("#profile-edit-button"),l=document.querySelector("#profile-edit-modal"),c=document.querySelector("#profile-title"),d=document.querySelector("#profile-title-input"),h=document.querySelector("#profile-description-input"),u=document.querySelector("#profile-description"),_=l.querySelector(".modal__form"),m=document.querySelector(".profile__add-button"),p=document.querySelector("#add-card-modal"),v=p.querySelector(".modal__form"),S=document.querySelector("#delete-card-modal"),b=document.querySelector("#image-preview"),E=document.querySelector("#avatar-edit-modal"),g=document.querySelector("#profile-image-button"),f=E.querySelector(".modal__form"),y=document.querySelector(".profile__image"),k=new class{constructor(e,t,s){this._displayName=e,this._displayDescription=t,this._avatar=s}getUserInfo(){return{name:this._displayName.textContent,description:this._displayDescription.textContent.trim()}}setUserInfo(e,t){this._displayName.textContent=e,this._displayDescription.textContent=t}setAvatar(e){this._avatar.src=e}}(c,u,y);let L;o.getAppInfo().then((e=>{let[t,i]=e;L=new s({renderer:q,items:t},".cards__list"),L.renderItems(),k.setUserInfo(i.name,i.about),k.setAvatar(i.avatar)})),a.addEventListener("click",(()=>{const e=k.getUserInfo();d.value=e.name,h.value=e.description,C.open()}));const C=new r(l,(e=>{C.saving(!0),o.updateUserInfo(e).then((e=>{k.setUserInfo(e.name,e.about),C.saving(!1),C.close(),A.toggleButtonState()}))}));C.setEventListeners(),m.addEventListener("click",(()=>{I.open()}));const q=t=>{const s=new e(t,"#card-template",B,T,w);L.addItem(s.getView())},I=new r(p,(e=>{I.saving(!0),o.addCard(e).then((e=>{I.saving(!1),q(e),I.close(),D.toggleButtonState()}))}));function B(e,t){U.open(e,t)}I.setEventListeners();const U=new class extends i{constructor(e){super(e),this._imageElement=this._popupElement.querySelector(".modal__image"),this._imageTitle=this._popupElement.querySelector(".modal__caption")}open(e,t){super.open(),this._imageElement.src=t,this._imageElement.alt=e,this._imageTitle.textContent=e}}(b,B);function w(e){e.isLiked?o.removeLike(e._id).then((()=>{e.handleLikeButton()})):o.likeCard(e._id).then((()=>{e.handleLikeButton()}))}U.setEventListeners();const x=new class extends i{constructor(e){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._deleteSubmit=this._popupElement.querySelector(".modal__save-button"),this._deleteSubmitConfirmText=this._deleteSubmit.textContent}setSubmitAction(e){this._handleFormSubmit=e}deleting=(()=>{var e=this;return function(t){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Deleting...";e._deleteSubmit.textContent=t?s:e._deleteSubmitConfirmText}})();setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}(S);function T(e){x.open(),x.setSubmitAction((()=>{x.deleting(!0),o.deleteCard(e._id).then((()=>{x.deleting(!1),e.removeCard(),x.close()}))}))}x.setEventListeners(),g.addEventListener("click",(()=>{$.open()}));const $=new r(E,(e=>{$.saving(!0),o.setUserAvatar(e).then((e=>{$.saving(!1),k.setAvatar(e.avatar),$.close(),V.toggleButtonState()}))}));$.setEventListeners();const A=new t(n,_),D=new t(n,v),V=new t(n,f);A.enableValidation(),D.enableValidation(),V.enableValidation(),A.toggleButtonState(),D.toggleButtonState(),V.toggleButtonState()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,